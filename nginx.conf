worker_processes  1;  # Set the number of worker processes to 1. Nginx will spawn a single worker process, which is ideal for low-traffic environments or for testing.

events {
    worker_connections 1024;  # Allow each worker process to handle a maximum of 1024 simultaneous connections.
}

http {
    upstream clusterapp {
        server app1:8080 max_fails=1 fail_timeout=30s;  # Define the upstream server app1. If it fails once, it will be considered unavailable for 30 seconds.
        server app2:8080 max_fails=1 fail_timeout=30s;  # Define the upstream server app2. If it fails once, it will be considered unavailable for 30 seconds.
        server app3:8080 max_fails=1 fail_timeout=30s;  # Define the upstream server app3. If it fails once, it will be considered unavailable for 30 seconds.
        server app4:8080 max_fails=1 fail_timeout=30s;  # Define the upstream server app4. If it fails once, it will be considered unavailable for 30 seconds.
        server app5:8080 max_fails=1 fail_timeout=30s;  # Define the upstream server app5. If it fails once, it will be considered unavailable for 30 seconds.
        server app6:8080 max_fails=1 fail_timeout=30s;  # Define the upstream server app6. If it fails once, it will be considered unavailable for 30 seconds.
    }

    server {
        listen 8888;  # Listen on port 8888 for incoming HTTP requests.

        location / {
            proxy_pass http://clusterapp;  # Forward incoming requests to the upstream group 'clusterapp', which distributes traffic across the defined servers.
            proxy_set_header Host $host;  # Pass the original 'Host' header from the client to the upstream server.
            proxy_set_header X-Real-IP $remote_addr;  # Pass the client's real IP address to the upstream server.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the client's IP address chain (useful if the client is behind multiple proxies).
            proxy_set_header X-Forwarded-Proto $scheme;  # Pass the original protocol (HTTP or HTTPS) used by the client to the upstream server.

            # Set server response timeouts:
            proxy_connect_timeout 1s;  # Timeout for establishing a connection with the upstream server is set to 1 second.
            proxy_read_timeout 1s;  # Timeout for reading the response from the upstream server is set to 1 second.
            proxy_send_timeout 1s;  # Timeout for sending the request to the upstream server is set to 1 second.
        }
    }
}
